{"ast":null,"code":"var _jsxFileName = \"/home/dom/ReactJS_ServicePro/src/components/main/Services.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useEffect, useState } from \"react\";\nimport { ServicesContext } from \"../../contexts/ServicesContext\";\nimport Service from \"./Service\";\nimport Error from \"../Error.jsx\";\nimport Loading from \"../Loading.jsx\";\nimport Axios from \"axios\";\nimport \"../../stylesheets/service.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Services = () => {\n  _s();\n\n  const {\n    services,\n    setServices\n  } = useContext(ServicesContext);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const url = \"https://raw.githubusercontent.com/LahoucineABOULHASSAN/json_files/main/services.json\";\n\n    const fetchData = async () => {\n      try {\n        const res = await Axios.get(url);\n\n        if (res.status !== 200) {\n          throw Error(\"Couldn't get res\");\n        }\n\n        setServices(res.data);\n      } catch (err) {\n        const error = err.message === \"Network Error\" ? \"Network Error, Please Check Your Internet Connection\" : err.message;\n        setError(error);\n      }\n    };\n\n    fetchData(); // eslint-disable-next-line\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [services.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"our-services\",\n        className: \"main-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Financial \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Services\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Lorem ipsum dolor, consectetur adipisicing. Lorem ipsum dolor sit.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"services grid\",\n        children: services.map(service => /*#__PURE__*/_jsxDEV(Service, {\n          service: service\n        }, service.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : !error && /*#__PURE__*/_jsxDEV(Loading, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(Error, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Services, \"OAbOsrhG9UuqVGWdQ4/DHnPuttg=\");\n\n_c = Services;\nexport default Services;\n\nvar _c;\n\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"sources":["/home/dom/ReactJS_ServicePro/src/components/main/Services.jsx"],"names":["useContext","useEffect","useState","ServicesContext","Service","Error","Loading","Axios","Services","services","setServices","error","setError","url","fetchData","res","get","status","data","err","message","length","map","service","id"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,QAAhC,QAAgD,OAAhD;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BV,UAAU,CAACG,eAAD,CAA5C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,GAAG,GACP,sFADF;;AAEA,UAAMC,SAAS,GAAG,YAAY;AAC5B,UAAI;AACF,cAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAUH,GAAV,CAAlB;;AACA,YAAIE,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtB,gBAAMZ,KAAK,CAAC,kBAAD,CAAX;AACD;;AACDK,QAAAA,WAAW,CAACK,GAAG,CAACG,IAAL,CAAX;AACD,OAND,CAME,OAAOC,GAAP,EAAY;AACZ,cAAMR,KAAK,GACTQ,GAAG,CAACC,OAAJ,KAAgB,eAAhB,GACI,sDADJ,GAEID,GAAG,CAACC,OAHV;AAIAR,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF,KAdD;;AAeAG,IAAAA,SAAS,GAlBK,CAkBD;AACd,GAnBQ,EAmBN,EAnBM,CAAT;AAqBA,sBACE;AAAA,eACGL,QAAQ,CAACY,MAAT,gBACC;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,cAAR;AAAuB,QAAA,SAAS,EAAC,YAAjC;AAAA,gCACE;AAAA,gDACY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAS,QAAA,SAAS,EAAC,eAAnB;AAAA,kBACGZ,QAAQ,CAACa,GAAT,CAAcC,OAAD,iBACZ,QAAC,OAAD;AAA0B,UAAA,OAAO,EAAEA;AAAnC,WAAcA,OAAO,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA,oBADD,GAiBC,CAACb,KAAD,iBAAU,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,YAlBd,EAoBGA,KAAK,iBAAI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,YApBZ;AAAA,kBADF;AAwBD,CAhDD;;GAAMH,Q;;KAAAA,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { ServicesContext } from \"../../contexts/ServicesContext\";\nimport Service from \"./Service\";\nimport Error from \"../Error.jsx\";\nimport Loading from \"../Loading.jsx\";\nimport Axios from \"axios\";\nimport \"../../stylesheets/service.css\";\n\nconst Services = () => {\n  const { services, setServices } = useContext(ServicesContext);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const url =\n      \"https://raw.githubusercontent.com/LahoucineABOULHASSAN/json_files/main/services.json\";\n    const fetchData = async () => {\n      try {\n        const res = await Axios.get(url);\n        if (res.status !== 200) {\n          throw Error(\"Couldn't get res\");\n        }\n        setServices(res.data);\n      } catch (err) {\n        const error =\n          err.message === \"Network Error\"\n            ? \"Network Error, Please Check Your Internet Connection\"\n            : err.message;\n        setError(error);\n      }\n    };\n    fetchData(); // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      {services.length ? (\n        <>\n          <div id=\"our-services\" className=\"main-title\">\n            <h1>\n              Financial <span>Services</span>\n            </h1>\n            <h5>\n              Lorem ipsum dolor, consectetur adipisicing. Lorem ipsum dolor sit.\n            </h5>\n          </div>\n          <section className=\"services grid\">\n            {services.map((service) => (\n              <Service key={service.id} service={service} />\n            ))}\n          </section>\n        </>\n      ) : (\n        !error && <Loading error={error} />\n      )}\n      {error && <Error error={error} />}\n    </>\n  );\n};\n\nexport default Services;\n"]},"metadata":{},"sourceType":"module"}